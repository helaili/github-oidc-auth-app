name: TEST VAR

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Selection of the target endpoint'
        type: environment
        default: 'production'
        required: true

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: 
      name: ${{ github.event.inputs.environment }}
    permissions:
      packages: read
      id-token: write
      actions: write
    steps: 
    - name: Update env with curl - name: Update env with curl
    run: | 
      currentValue=$(curl -L \
        -X GET \
        -H "Accept: application/vnd.github+json" \
        -H "Authorization: Bearer ${{ secrets.MY_PAT }}" \
        -H "X-GitHub-Api-Version: 2022-11-28" \
        https://api.github.com/repositories/${{ github.repository_id }}/environments/${{ github.event.inputs.environment }}/variables/ENDPOINT | jq -r ".value")
      
      if [ -n "$currentValue" ]; then
        # Update the value
        curl -L \
          -X PATCH \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.MY_PAT }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repositories/${{ github.repository_id }}/environments/${{ github.event.inputs.environment }}/variables/ENDPOINT \
          -d '{"name":"ENDPOINT","value":"https://xxxx/token"}'
      else
        # Set the value
        curl -L \
          -X PATCH \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.MY_PAT }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repositories/${{ github.repository_id }}/environments/${{ github.event.inputs.environment }}/variables \
          -d '{"name":"ENDPOINT","value":"https://xxxx/token"}'
      fi

          
